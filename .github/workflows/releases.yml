jobs:
  upload-apk-to-release:
    defaults:
      run:
        working-directory: android
    name: Add Android Debug Apk to Release Assets
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Print Release Url
      run: echo "${{ github.event.release.html_url }}"
    - continue-on-error: true
      name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: ${{ runner.os }}-gradle
    - continue-on-error: true
      id: assemble_debug_apk
      name: Assemble Debug Apk
      run: './gradlew assembleDebug

        '
    - continue-on-error: true
      id: asset_paths
      name: Specify Release Asset Paths
      run: 'echo "::set-output name=openbot_apk_path::$(pwd)/robot/build/outputs/apk/debug/robot-debug.apk"

        echo "::set-output name=controller_apk_path::$(pwd)/controller/build/outputs/apk/debug/controller-debug.apk"

        '
    - continue-on-error: true
      id: asset_names
      name: Specify Release Asset Names using Tag [${{github.event.release.tag_name}}]
      run: 'echo "::set-output name=openbot_name::OpenBot-$(echo ${{github.event.release.tag_name}}|
        sed ''s/[^-a-zA-Z0-9.]/_/g''| sed ''s/^v//'').apk"

        echo "::set-output name=controller_name::Controller-$(echo ${{github.event.release.tag_name}}|
        sed ''s/[^-a-zA-Z0-9.]/_/g''| sed ''s/^v//'').apk"

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-openbot-asset
      name: Upload OpenBot Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/vnd.android.package-archive
        asset_name: ${{ steps.asset_names.outputs.openbot_name }}
        asset_path: ${{ steps.asset_paths.outputs.openbot_apk_path }}
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-controller-asset
      name: Upload Controller Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/vnd.android.package-archive
        asset_name: ${{ steps.asset_names.outputs.controller_name }}
        asset_path: ${{ steps.asset_paths.outputs.controller_apk_path }}
        upload_url: ${{ github.event.release.upload_url }}
name: Upload Android Apk to Release
on:
  repository_dispatch:
    types: trigger-ga___releases.yml
